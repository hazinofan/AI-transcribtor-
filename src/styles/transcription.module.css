/* transcription.module.css */

/* Base Styles */
.container {
    min-height: 100vh;
    background-color: var(--bg-primary);
    color: var(--text-primary);
    padding: 20px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.loadingContainer {
    display: flex;
    align-items: center;
    justify-content: center;
    padding-top: 5px;    /* Reduced top space */
    padding-bottom: 10px; /* Adjusted bottom space */
    font-size: 1.2rem;
    color: var(--text-secondary);
}

/* Video Player */
.videoContainer {
    width: 100%;
    max-width: 800px; /* Or your desired max-width */
    aspect-ratio: 16/9;
    margin: 0 auto 15px; /* Reduced bottom margin from 30px */
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    background-color: #000; /* Optional: placeholder bg for the container */
}

/* This styles the div container created by react-youtube */
.videoPlayer {
    width: 100%;
    height: 100%;
}

/* This styles the actual iframe element inside react-youtube's div */
.videoPlayerIframe {
    width: 100%;
    height: 100%;
    border: none; /* Important to remove default iframe border */
}

/* Messages */
.loadingMessage, .emptyMessage {
    text-align: center;
    font-size: 1.2rem;
    color: var(--text-secondary);
    margin: 20px 0;
}

.errorMessage {
    text-align: center;
    font-size: 1.2rem;
    color: var(--error-color);
    margin: 20px 0;
}

/* Progress Bar Enhancements */
.loadingContent {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 400px; /* Or your desired max width */
}

.loadingText {
    font-size: 1.1rem;
    margin-bottom: 8px;
    color: var(--text-primary);
}

.estimatedTime {
    font-size: 0.9rem;
    color: var(--text-secondary);
    margin-bottom: 15px;
}

.progressDisplayContainer { /* New style for the container of bar + percentage */
    display: flex;
    align-items: center;
    width: 100%;
    margin-bottom: 5px; /* Space before time labels below */
}

.progressWrapper {
    /* position: relative; */ /* No longer needed for this element */
    flex-grow: 1; /* Allow progress bar to take available space */
    height: 20px; /* Example height, adjust as needed */
    background-color: var(--progress-track-bg); /* Track color */
    border-radius: 10px;
    overflow: hidden; /* Ensures progress bar stays within bounds */
    /* margin-bottom: 5px; */ /* Moved to progressDisplayContainer */
}

.progressBar {
    width: 100%; /* Take full width of wrapper initially */
    height: 100%;
    background-color: var(--progress-track-bg); /* Track color (for Firefox track mainly) */
    border-radius: 10px;
    /* transition: width 0.2s ease-out; */ /* Removed: Transition handled by pseudo-elements */
    appearance: none; /* Remove default browser styling */
    -webkit-appearance: none;
}

/* For Webkit browsers (Chrome, Safari) */
.progressBar::-webkit-progress-bar {
    background-color: var(--progress-track-bg);
    border-radius: 10px;
    margin: 0;
    overflow: hidden; /* Add overflow hidden to help contain the value */
}

.progressBar::-webkit-progress-value {
    background-color: var(--progress-bar-bg);
    border-radius: 10px;
    transition: width 0.2s ease-out;
    margin: 0;
}

/* For Firefox */
.progressBar::-moz-progress-bar {
    background-color: var(--progress-bar-bg);
    border-radius: 10px;
    transition: width 0.2s ease-out;
}

.progressPercentage {
    /* position: absolute; */ /* Removed absolute positioning */
    /* right: 10px; */
    /* top: 50%; */
    /* transform: translateY(-50%); */
    margin-left: 10px; /* Space between bar and percentage */
    font-size: 1em;  /* Adjusted from 0.8em based on screenshot */
    color: var(--progress-text-color); /* Updated to use CSS variable */
    font-weight: bold;
    /* line-height: 20px; */ /* Vertical alignment handled by flex container */
}

.timeLabels {
    display: flex;
    justify-content: center; /* Center the remaining time text */
    width: 100%;
    font-size: 0.85em;
    color: var(--progress-time-color);
    margin-top: 5px; /* Add some space above the time labels */
}

.remainingTimeText {
    /* Style for the remaining time text, e.g., color, font-weight */
    color: var(--text-primary);
    font-style: italic;
}

/* Segment Container */
.segmentContainer {
    max-width: 1000px;
    margin: 0 auto; /* Ensures segmentContainer itself is centered */
    background-color: var(--segment-bg);
    border: 1px solid var(--card-border);
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.segmentNavigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
    background-color: var(--segment-nav-bg);
    color: var(--segment-nav-text);
}

.navButton {
    padding: 8px 15px;
    border: none;
    border-radius: 6px;
    background-color: var(--button-nav-bg);
    color: white;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease;
}

.navButton:hover:not(.disabledButton) {
    background-color: var(--button-nav-hover-bg);
    transform: translateY(-1px);
}

.disabledButton {
    background-color: var(--button-disabled-bg);
    cursor: not-allowed;
    opacity: 0.7;
}

.segmentCounter {
    font-size: 0.9rem;
    font-weight: 500;
}

/* New style for grouping segment counter and timestamp */
.segmentInfoGroup {
    display: flex;
    align-items: flex-end;
    gap: 20px; /* Adjust this value to control the space between counter and timestamp */
}

/* New container for segment and vocabulary - Changed to relative positioning context */
.mainContentArea {
    position: relative; /* For absolute positioning of vocabularyBox */
    padding: 10px 0; /* Reduced top/bottom padding from 20px */
    /* display: flex; */ /* Removed */
    /* gap: 20px; */ /* Removed */
}

/* Segment Content */
.segmentContent {
    display: flex;
    flex-direction: column; /* Stack translation and arabic vertically */
    /* min-height: 300px; */ /* Removed to allow content to define height */
    flex: 3; /* Takes more space - relative to sibling .vocabularyBox if .mainContentArea was flex */
}

.translationSide, .arabicSide {
    flex: 1;
    padding: 20px 25px; /* Reduced vertical padding, kept horizontal */
    /* background-color: #f9f9f9; */ /* Base color can be on segmentContent if uniform */
}

.translationSide {
    /* border-right: 1px solid #eee; */ /* Removed */
    border-bottom: 1px solid var(--segment-border); /* Updated */
    background-color: var(--segment-translation-bg);
}

.arabicSide {
    background-color: var(--segment-arabic-bg);
}

.segmentTimestamp { /* Renamed from timeStamp and potentially adjusted */
    font-family: 'Courier New', monospace;
    font-size: 0.85rem;
    color: var(--segment-nav-text); /* Updated to use variable */
    margin: 0; /* Removed horizontal margins, spacing now handled by segmentInfoGroup gap */
    /* Removed margin-bottom: 15px; as it's no longer needed here */
}

.translationText {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text-primary);
}

.arabicText {
    font-size: 1.5rem;
    line-height: 1.8;
    color: var(--text-primary);
    font-weight: 600;
    font-size: 3rem;
}

/* Vocabulary Box - Updated for absolute positioning */
.vocabularyBox {
    /* margin-top: 25px; */ /* Removed */
    padding: 15px;
    background-color: var(--vocab-bg);
    border: 1px solid var(--card-border);
    border-radius: 8px;
    border-left: 4px solid var(--vocab-border);
    /* flex: 1; */ /* Removed */
    /* margin-left: 20px; */ /* Removed */
    /* align-self: flex-start; */ /* Removed */
    max-height: 500px; /* Example: to make it scrollable if too long */
    overflow-y: auto; /* Add scroll for overflow */
    transition: background-color 0.3s ease, border-color 0.3s ease;

    position: absolute;
    top: 20px; /* Aligns with segmentContainer considering mainContentArea padding */
    left: calc(50% + 500px + 20px); /* 50% (parent center) + half segment max-width + gap */
    width: 300px; /* Fixed width for the vocabulary box */
}

.vocabularyTitle {
    font-size: 1rem;
    color: var(--vocab-title-color);
    margin-bottom: 10px;
    font-weight: 600;
}

.vocabularyList {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.vocabularyItem {
    padding: 8px 0;
    border-bottom: 1px dashed var(--vocab-item-border);
    display: flex;
    justify-content: space-between;
}

.vocabularyItem:last-child {
    border-bottom: none;
}

.vocabularyArabic {
    font-weight: bold;
    color: var(--vocab-text-color);
    text-align: right;
    direction: rtl;
    font-size: 2rem;
}

.vocabularyTranslation {
    color: var(--vocab-translation-color);
}

.keyboardHint {
    text-align: center;
    margin-top: 5px;
    color: var(--text-muted);
    font-size: 0.9em;
}

/* Radix Slider Styles */
.sliderContainer {
    display: flex; /* Use flex to help center the slider if needed */
    justify-content: center; /* Center slider within this container */
    padding: 5px 0; /* Add some vertical padding */
    /* The width of the slider will be controlled by SegmentSliderRoot to match segment display */
}

.SegmentSliderRoot {
    position: relative;
    display: flex;
    align-items: center;
    user-select: none;
    touch-action: none;
    width: 100%; /* Default to full width of its container */
    max-width: var(--segment-container-width, 600px); /* Controlled by variable or fallback */
    height: 20px; /* Height for interaction area */
}

.SegmentSliderTrack {
    background-color: var(--slider-track-bg);
    position: relative;
    flex-grow: 1;
    border-radius: 9999px;
    height: 6px; /* Height of the track */
}

.SegmentSliderRange {
    position: absolute;
    background-color: var(--slider-range-bg);
    border-radius: 9999px;
    height: 100%;
}

.SegmentSliderThumb {
    display: block;
    width: 20px;
    height: 20px;
    background-color: var(--slider-thumb-bg);
    border: 2px solid var(--slider-thumb-border);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    border-radius: 50%; /* Circular thumb */
    cursor: grab;
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.SegmentSliderThumb:focus {
    outline: none;
    box-shadow: 0 0 0 5px var(--slider-focus-ring);
}

.SegmentSliderThumb:active {
    cursor: grabbing;
}

/* Remove old slider styles if they exist */
/*
.segmentSlider,
.segmentSlider::-webkit-slider-thumb,
.segmentSlider::-moz-range-thumb,
.segmentSlider::-webkit-slider-runnable-track,
.segmentSlider::-moz-range-track {
    all: unset;
}
*/

/* Responsive Design */
@media (max-width: 768px) {
    .segmentContent {
        flex-direction: column;
    }

    /* .mainContentArea responsive rules removed as it's no longer flex */
    /*
    .mainContentArea {
        flex-direction: column;
    }
    */

    /* .vocabularyBox rules for 768px are now handled by the 1370px breakpoint,
       unless specific overrides for very small screens are needed here.
       The 1370px rule will make it stack and center.
    */

    .translationSide {
        border-right: none;
        border-bottom: 1px solid var(--segment-border);
    }

    .videoContainer {
        border-radius: 8px;
    }

    .arabicText {
        font-size: 1.3rem;
    }
}

/* New Media Query for stacking vocabulary box */
@media (max-width: 1370px) {
    .vocabularyBox {
        position: static;
        width: auto; /* Allow it to take natural width up to max-width */
        max-width: 1000px; /* Match segment container's max-width for consistency */
        margin: 20px auto 0; /* Top margin, centered horizontally */
        left: auto; /* Reset absolute positioning */
        top: auto; /* Reset absolute positioning */
        /* Optional: Adjust border for stacked layout */
        /* border-left: none; */
        /* border-top: 4px solid #3498db; */
    }
}

/* Add new styles for the summary section here */
.summarySectionContainer {
    max-width: 1000px;
    margin: 20px auto 0; /* Add some top margin to separate from keyboard hint or vocab */
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 15px; /* Updated as per screenshot */
    padding: 20px 25px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.summaryTitle {
    font-size: 1.4rem; /* Slightly larger for a main title */
    color: var(--text-primary);
    margin-bottom: 15px;
    text-align: center; /* Center the title */
    border-bottom: 2px solid var(--segment-nav-bg); /* Accent line */
    padding-bottom: 10px;
}

.summaryContent p {
    font-size: 1rem;
    line-height: 1.7;
    color: var(--text-primary);
    white-space: pre-line; /* Preserve newlines and spaces */
    text-align: justify; /* Justify text for a cleaner look */
    margin-bottom: 0; /* Remove default p margin if not needed */
}

/* For a smaller loading message, if you use one for the summary */
.loadingContainerSmall {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px 0;
    font-size: 1rem;
    color: var(--text-secondary);
}

.summaryErrorMessage {
    font-size: 1rem; /* Match content text size */
    color: var(--error-color);
    text-align: center;
    padding: 10px;
    background-color: var(--error-bg);
    border: 1px solid var(--error-border);
    border-radius: 4px;
}