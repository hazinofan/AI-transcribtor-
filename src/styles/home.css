/* styles/globals.css */

/* reset & body */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: system-ui, sans-serif;
    background-color: var(--bg-primary);
    color: var(--text-primary);
    min-height: 100vh;
}

/* Layout */
.wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    width: 100%;
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 2px solid var(--border-color);
    padding: 16px 32px;
    background-color: var(--bg-primary);
    width: 100%;
    position: relative;
}

.header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
}

.logo {
    display: flex;
    align-items: center;
}

.logo img {
    height: 50px;
    margin-right: 8px;
}

.logo-text {
    font-size: 1.5rem;
    font-weight: 600;
    color: #059669;
    /* green */
}

.header-controls {
    display: flex;
    align-items: center;
    gap: 20px;
}

.lang-switcher {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 4px;
    border-radius: 8px;
}

.lang-switcher img {
    cursor: pointer;
    width: 28px;
    height: 20px;
    border-radius: 4px;
    transition: opacity 0.2s ease, transform 0.2s ease;
    opacity: 0.7;
}

.lang-switcher img:hover {
    opacity: 1;
    transform: scale(1.05);
}

.lang-switcher .active {
    opacity: 1;
    box-shadow: 2px 2px 2px #a8a8a8;
}

.main {
    flex: 1;
    min-height: 83vh;
    justify-content: center;
    padding: 0 16px;
}

.footer {
    text-align: center;
    font-size: 0.875rem;
    color: var(--text-secondary);
    border-top: 2px solid var(--border-color);
    place-items: center;
    padding: 19px;
}

.footer-links {
    display: flex;
    margin-bottom: 7px;
    gap: 24px;
    flex-direction: row;
}

.footer_rights {
    font-size: 16px;
}

a.apropos,
a.contact {
    color: var(--text-secondary);
    font-size: 17px;
    text-decoration: none;
    transition: .3s ease;
}

a.apropos:hover,
a.contact:hover {
    text-decoration: underline;
    color: var(--text-primary);
}

.title {
    font-size: 58px;
    text-align-last: center;
    font-weight: 300;
}

.sub-title {
    padding-top: 27px;
    color: var(--text-secondary);
    font-weight: 300;
    width: 90%;
    place-self: center;
}

.hero_section {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    padding: 4rem 1rem;
    display: grid;
    place-items: center;
    gap: 1.5rem;
    text-align: center;
}

.hero_text {
    display: grid;
    gap: 29px;
}

.star {
    position: absolute;
    width: 80px;
    height: auto;
    pointer-events: none;
    user-select: none;
}

.star--left {
    top: 1rem;
    left: 1.5rem;
}

.star--right {
    top: 12rem;
    right: 2rem;
    transform: rotate(-8deg);
}

.writing-hand {
    position: absolute;
    top: 22rem;
    left: 0rem;
    transform: rotate(20deg);
    width: 70px;
    z-index: 10;
}

.input_container {
    padding: 21px;
    background: #fff4da;
    border-radius: 18px;
    margin-top: 25px;
    border: 2px solid black;
    box-shadow: 5px 10px black;
    width: 100%; /* Takes full width of .hero_section */

    /* Default: Horizontal layout for wide screens */
    display: flex;
    flex-direction: row; /* Explicitly row for default */
    align-items: center; /* Vertically center items in the bar */
    gap: 30px;
}

.input_row_top {
    display: flex; /* Keep it flex for its child input */
    flex-grow: 1;  /* This row (containing the URL input) will take up available space */
}

.styled-input {
    flex: 1;
    height: 3.5rem;
    padding: 0 1rem;
    background: #FFF;
    border: 2px solid #000;
    border-radius: 8px;
    box-shadow: 5px 7px black;
    font-size: 1rem;
    outline: none;
    min-width: 8rem; /* Added min-width based on earlier comments */
}

select.styled-input {
    flex-grow: 0;
    /* min-width still applies from .styled-input */
}

.styled-input.url-input { /* Target the URL input specifically */
    width: 100%; /* Makes the URL input fill its parent .input_row_top */
}

.input_row_bottom {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 30px; /* Gap between select and button */
    flex-shrink: 0; /* Prevent this row from shrinking too much on wide screens */
}

/* .styled-input.lang-select {
    /* flex-grow: 0; is already set by select.styled-input */
    /* min-width from .styled-input (8rem) still applies */
/* } */

.btn-container {
    display: inline-block;
    position: relative;
}

.button-shadow {
    position: absolute;
    top: 5px;
    left: 5px;
    width: 100%;
    height: 100%;
    background-color: black;
    border-radius: 4px;
    z-index: 0;
}

.styled-button {
    height: 3.5rem;
    padding: 0 1rem;
    background: #F7B36A;
    border: 2px solid black;
    box-shadow: none;
    font-size: 1rem;
    cursor: pointer;
    position: relative;
    z-index: 1;
    transition: transform 0.2s ease-out;
    min-width: 8rem;
}

.btn-container:hover .styled-button {
    transform: translate(-2px, -2px);
    background-color: #f8ad5c;
}

.styled-button:active {
    transform: translate(0, 0);
}

/* Responsive header */
@media (max-width: 768px) {
    .header {
        padding: 12px 16px;
    }
    
    .header-container {
        gap: 16px;
    }
    
    .header-controls {
        gap: 12px;
    }
    
    .lang-switcher {
        gap: 8px;
    }
    
    .lang-switcher img {
        width: 24px;
        height: 18px;
    }
}

/* Small screen adjustments */
@media (max-width: 600px) {
    /*.star {
        width: 0px;
    }*/

    .title {
        font-size: 36px; /* Adjust as needed */
    }

    .sub-title {
        font-size: 14px; /* Adjust as needed */
        padding-top: 10px; /* Reduce padding */
    }

    .hero_text {
        gap: 10px; /* Reduce gap */
    }
}

/* --- Responsive Vertical Layout --- */
/* Apply when the viewport is narrower than (e.g.) 600px.
   Choose a breakpoint where the horizontal layout starts to look too cramped.
   This could be around the sum of min-widths of your elements + gaps.
   8rem (input) + 8rem (select) + button_width + 2*gap = approx 16rem + 8rem + 60px ~ 384px + 60px = 444px.
   So a breakpoint like 500px or 550px might be more appropriate if 600px feels too early.
   Let's try 550px.
*/
@media (max-width: 720px) {
    .input_container {
        flex-direction: column; /* Stack rows vertically */
        align-items: stretch;   /* Make rows take full width */
        gap: 15px;              /* Reduce gap between rows */
    }

    .input_row_top {
        flex-grow: 0; /* No longer needs to grow in a column layout */
        width: 100%;
    }

    .title {
        font-size: 45px; /* Adjust as needed */
    }
    .star--left {
        top: 0.5rem;
        left: 0rem;
        width: 80px;
    }

    .star--right {
        top: 1rem;
        right: 0rem;
        width: 75px;
    }

    .input_row_bottom {
        width: 100%;
        gap: 15px; /* Gap between select and button */
        /* Decide how select and button share space in this row */
        /* Option 1: Justify them (e.g., space-between if you want them at ends) */
        /* justify-content: space-between; */

        /* Option 2: Let select take priority and button take remaining or natural width */
        /* (This is often fine if select has min-width and button has natural width) */
    }

    /*.styled-input.lang-select {
        /* If you want the select to take more space on small screens: */
        /* flex-grow: 1; */
        /* If it gets too wide, ensure it doesn't exceed a certain max-width or rely on its content */
    /*}*/

    /*.btn-container {
        /* If you want the button to take more space: */
        /* flex-grow: 1; */
        /* display: flex; /* if its child button needs to fill it */
   /* }*/
    /* If button should be full width in its own "slot" in btn-container */
    /* .btn-container .styled-button { width: 100%; } */

    .writing-hand {
        display: none;
    }
}
